def fcfs(processes):
    n = len(processes)

    # Sort by arrival time
    processes.sort(key=lambda x: x[1])

    # Results storage
    completion_time = [0] * n
    turnaround_time = [0] * n
    waiting_time = [0] * n

    # Start scheduling
    time = 0
    for i in range(n):
        pid, at, bt = processes[i]

        if time < at:  # If CPU is idle
            time = at
        time += bt
        completion_time[i] = time
        turnaround_time[i] = completion_time[i] - at
        waiting_time[i] = turnaround_time[i] - bt

    # Display results
    print("PID\tAT\tBT\tCT\tTAT\tWT")
    for i in range(n):
        print(f"{processes[i][0]}\t{processes[i][1]}\t{processes[i][2]}\t{completion_time[i]}\t{turnaround_time[i]}\t{waiting_time[i]}")

    avg_tat = sum(turnaround_time) / n
    avg_wt = sum(waiting_time) / n
    print(f"\nAverage Turnaround Time: {avg_tat:.2f}")
    print(f"Average Waiting Time: {avg_wt:.2f}")


# Example processes: (PID, Arrival Time, Burst Time)
process_list = [
    (1, 0, 5),
    (2, 1, 3),
    (3, 2, 8),
    (4, 3, 6)
]

fcfs(process_list)

